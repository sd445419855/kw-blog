<!DOCTYPE HTML><html><head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">

<title>WebSocket_基础知识（index）</title>
    
<style id="wiz_code_style">.wiz-editor-body .wiz-code-container{position: relative; padding:8px 0; margin: 5px 0;text-indent:0; text-align:left;}.CodeMirror {font-family: Consolas, "Liberation Mono", Menlo, Courier, monospace; color: black; font-size: 10.5pt; font-size: 0.875rem}.wiz-editor-body .wiz-code-container .CodeMirror div {margin-top: 0; margin-bottom: 0;}.CodeMirror-lines {padding: 4px 0;}.CodeMirror pre.CodeMirror-line,.CodeMirror pre.CodeMirror-line-like {padding: 0 4px;}.CodeMirror pre.CodeMirror-line {min-height: 24px;}.CodeMirror-scrollbar-filler, .CodeMirror-gutter-filler {background-color: white;}.CodeMirror-gutters {border-right: 1px solid #ddd; background-color: #f7f7f7; white-space: nowrap;}.CodeMirror-linenumbers {}.CodeMirror-linenumber {padding: 0 3px 0 5px; min-width: 20px; text-align: right; color: #999; white-space: nowrap;}.CodeMirror-guttermarker {color: black;}.CodeMirror-guttermarker-subtle {color: #999;}.CodeMirror-cursor {border-left: 1px solid black; border-right: none; width: 0;}.CodeMirror div.CodeMirror-secondarycursor {border-left: 1px solid silver;}.cm-fat-cursor .CodeMirror-cursor {width: auto; border: 0 !important; background: #7e7;}.cm-fat-cursor div.CodeMirror-cursors {z-index: 1;}.cm-fat-cursor-mark {background-color: rgba(20, 255, 20, 0.5);-webkit-animation: blink 1.06s steps(1) infinite;-moz-animation: blink 1.06s steps(1) infinite;animation: blink 1.06s steps(1) infinite;}.cm-animate-fat-cursor {width: auto; border: 0; -webkit-animation: blink 1.06s steps(1) infinite; -moz-animation: blink 1.06s steps(1) infinite; animation: blink 1.06s steps(1) infinite; background-color: #7e7;}@-moz-keyframes blink {  0% {}  50% { background-color: transparent; }  100% {}}@-webkit-keyframes blink {  0% {}  50% { background-color: transparent; }  100% {}}@keyframes blink {  0% {}  50% { background-color: transparent; }  100% {}}.CodeMirror-overwrite .CodeMirror-cursor {}.cm-tab { display: inline-block; text-decoration: inherit; }.CodeMirror-rulers {position: absolute; left: 0; right: 0; top: -50px; bottom: -20px; overflow: hidden;}.CodeMirror-ruler {border-left: 1px solid #ccc; top: 0; bottom: 0; position: absolute;}.cm-s-default .cm-header {color: blue;}.cm-s-default .cm-quote {color: #090;}.cm-negative {color: #d44;}.cm-positive {color: #292;}.cm-header, .cm-strong {font-weight: bold;}.cm-em {font-style: italic;}.cm-link {text-decoration: underline;}.cm-strikethrough {text-decoration: line-through;}.cm-s-default .cm-keyword {color: #708;}.cm-s-default .cm-atom {color: #219;}.cm-s-default .cm-number {color: #164;}.cm-s-default .cm-def {color: #00f;}.cm-s-default .cm-variable,.cm-s-default .cm-punctuation,.cm-s-default .cm-property,.cm-s-default .cm-operator {}.cm-s-default .cm-variable-2 {color: #05a;}.cm-s-default .cm-variable-3 {color: #085;}.cm-s-default .cm-comment {color: #a50;}.cm-s-default .cm-string {color: #a11;}.cm-s-default .cm-string-2 {color: #f50;}.cm-s-default .cm-meta {color: #555;}.cm-s-default .cm-qualifier {color: #555;}.cm-s-default .cm-builtin {color: #30a;}.cm-s-default .cm-bracket {color: #997;}.cm-s-default .cm-tag {color: #170;}.cm-s-default .cm-attribute {color: #00c;}.cm-s-default .cm-hr {color: #999;}.cm-s-default .cm-link {color: #00c;}.cm-s-default .cm-error {color: #f00;}.cm-invalidchar {color: #f00;}.CodeMirror-composing { border-bottom: 2px solid; }div.CodeMirror span.CodeMirror-matchingbracket {color: #0b0;}div.CodeMirror span.CodeMirror-nonmatchingbracket {color: #a22;}.CodeMirror-matchingtag { background: rgba(255, 150, 0, .3); }.CodeMirror-activeline-background {background: #e8f2ff;}.CodeMirror {position: relative; background: #f5f5f5;}.CodeMirror-scroll {overflow: hidden !important; margin-bottom: 0; margin-right: -30px; padding: 16px 30px 16px 0; outline: none; position: relative;}.CodeMirror-sizer {position: relative; border-right: 30px solid transparent;}.CodeMirror-vscrollbar, .CodeMirror-hscrollbar, .CodeMirror-scrollbar-filler, .CodeMirror-gutter-filler {position: absolute; z-index: 6; display: none;}.CodeMirror-vscrollbar {right: 0; top: 0; overflow-x: hidden; overflow-y: scroll;}.CodeMirror-hscrollbar {bottom: 0; left: 0 !important; overflow-y: hidden; overflow-x: scroll;pointer-events: auto !important;outline: none;}.CodeMirror-scrollbar-filler {right: 0; bottom: 0;}.CodeMirror-gutter-filler {left: 0; bottom: 0;}.CodeMirror-gutters {position: absolute; left: 0; top: 0; min-height: 100%; z-index: 3;}.CodeMirror-gutter {white-space: normal; height: 100%; display: inline-block; vertical-align: top; margin-bottom: -30px;}.CodeMirror-gutter-wrapper {position: absolute; z-index: 4; background: none !important; border: none !important;}.CodeMirror-gutter-background {position: absolute; top: 0; bottom: 0; z-index: 4;}.CodeMirror-gutter-elt {position: absolute; cursor: default; z-index: 4;}.CodeMirror-gutter-wrapper ::selection { background-color: transparent }.CodeMirror-gutter-wrapper ::-moz-selection { background-color: transparent }.CodeMirror-lines {cursor: text; min-height: 1px;}.CodeMirror pre.CodeMirror-line,.CodeMirror pre.CodeMirror-line-like {-moz-border-radius: 0; -webkit-border-radius: 0; border-radius: 0; border-width: 0; background: transparent; font-family: inherit; font-size: inherit; margin: 0; white-space: pre; word-wrap: normal; line-height: inherit; color: inherit; z-index: 2; position: relative; overflow: visible; -webkit-tap-highlight-color: transparent; -webkit-font-variant-ligatures: contextual; font-variant-ligatures: contextual;}.CodeMirror-wrap pre.CodeMirror-line,.CodeMirror-wrap pre.CodeMirror-line-like {word-wrap: break-word; white-space: pre-wrap; word-break: normal;}.CodeMirror-linebackground {position: absolute; left: 0; right: 0; top: 0; bottom: 0; z-index: 0;}.CodeMirror-linewidget {position: relative; z-index: 2; padding: 0.1px;}.CodeMirror-widget {}.CodeMirror-rtl pre { direction: rtl; }.CodeMirror-code {outline: none;}.CodeMirror-scroll,.CodeMirror-sizer,.CodeMirror-gutter,.CodeMirror-gutters,.CodeMirror-linenumber {-moz-box-sizing: content-box; box-sizing: content-box;}.CodeMirror-measure {position: absolute; width: 100%; height: 0; overflow: hidden; visibility: hidden;}.CodeMirror-cursor {position: absolute; pointer-events: none;}.CodeMirror-measure pre { position: static; }div.CodeMirror-cursors {visibility: hidden; position: relative; z-index: 3;}div.CodeMirror-dragcursors {visibility: visible;}.CodeMirror-focused div.CodeMirror-cursors {visibility: visible;}.CodeMirror-selected { background: #d9d9d9; }.CodeMirror-focused .CodeMirror-selected { background: #d7d4f0; }.CodeMirror-crosshair { cursor: crosshair; }.CodeMirror-line::selection, .CodeMirror-line > span::selection, .CodeMirror-line > span > span::selection { background: #d7d4f0; }.CodeMirror-line::-moz-selection, .CodeMirror-line > span::-moz-selection, .CodeMirror-line > span > span::-moz-selection { background: #d7d4f0; }.cm-searching {background: #ffa; background: rgba(255, 255, 0, .4);}.cm-force-border { padding-right: .1px; }@media print {  .CodeMirror div.CodeMirror-cursors {visibility: hidden;}}.cm-tab-wrap-hack:after { content: ""; }span.CodeMirror-selectedtext { background: none; }.CodeMirror-activeline-background, .CodeMirror-selected {transition: visibility 0ms 100ms;}.CodeMirror-blur .CodeMirror-activeline-background, .CodeMirror-blur .CodeMirror-selected {visibility:hidden;}.CodeMirror-blur .CodeMirror-matchingbracket {color:inherit !important;outline:none !important;text-decoration:none !important;}.CodeMirror-sizer {min-height:auto !important;}</style><style name="wiz_code_style" id="wiz_code_style-eclipse">.cm-s-eclipse span.cm-meta { color: #FF1717; }.cm-s-eclipse span.cm-keyword { line-height: 1em; font-weight: bold; color: #7F0055; }.cm-s-eclipse span.cm-atom { color: #219; }.cm-s-eclipse span.cm-number { color: #164; }.cm-s-eclipse span.cm-def { color: #00f; }.cm-s-eclipse span.cm-variable { color: black; }.cm-s-eclipse span.cm-variable-2 { color: #0000C0; }.cm-s-eclipse span.cm-variable-3 { color: #0000C0; }.cm-s-eclipse span.cm-property { color: black; }.cm-s-eclipse span.cm-operator { color: black; }.cm-s-eclipse span.cm-comment { color: #3F7F5F; }.cm-s-eclipse span.cm-string { color: #2A00FF; }.cm-s-eclipse span.cm-string-2 { color: #f50; }.cm-s-eclipse span.cm-qualifier { color: #555; }.cm-s-eclipse span.cm-builtin { color: #30a; }.cm-s-eclipse span.cm-bracket { color: #cc7; }.cm-s-eclipse span.cm-tag { color: #170; }.cm-s-eclipse span.cm-attribute { color: #00c; }.cm-s-eclipse span.cm-link { color: #219; }.cm-s-eclipse span.cm-error { color: #f00; }.cm-s-eclipse .CodeMirror-activeline-background { background: #e8f2ff; }.cm-s-eclipse .CodeMirror-matchingbracket { outline:1px solid grey; color:black !important; }</style><style id="wiz_custom_css">html, .wiz-editor-body {font-size: 12pt;}.wiz-editor-body {font-family: Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;line-height: 1.7;margin: 0 auto;position:relative;padding: 20px 16px;}.wiz-editor-body h1,.wiz-editor-body h2,.wiz-editor-body h3,.wiz-editor-body h4,.wiz-editor-body h5,.wiz-editor-body h6 {margin:20px 0 10px;margin:1.25rem 0 0.625rem;padding: 0;font-weight: bold;}.wiz-editor-body h1 {font-size:20pt;font-size:1.67rem;}.wiz-editor-body h2 {font-size:18pt;font-size:1.5rem;}.wiz-editor-body h3 {font-size:15pt;font-size:1.25rem;}.wiz-editor-body h4 {font-size:14pt;font-size:1.17rem;}.wiz-editor-body h5 {font-size:12pt;font-size:1rem;}.wiz-editor-body h6 {font-size:12pt;font-size:1rem;color: #777777;margin: 1rem 0;}.wiz-editor-body div,.wiz-editor-body p,.wiz-editor-body ul,.wiz-editor-body ol,.wiz-editor-body dl,.wiz-editor-body li {margin:8px 0 0;}.wiz-editor-body blockquote,.wiz-editor-body table,.wiz-editor-body pre,.wiz-editor-body code {margin:8px 0;}.wiz-editor-body .CodeMirror pre {margin:0;}.wiz-editor-body a {word-wrap: break-word;text-decoration-skip-ink: none;}.wiz-editor-body ul,.wiz-editor-body ol {padding-left:32px;padding-left:2rem;}.wiz-editor-body ol.wiz-list-level1 > li {list-style-type:decimal;}.wiz-editor-body ol.wiz-list-level2 > li {list-style-type:lower-latin;}.wiz-editor-body ol.wiz-list-level3 > li {list-style-type:lower-roman;}.wiz-editor-body li.wiz-list-align-style {list-style-position: inside; margin-left: -1em;}.wiz-editor-body blockquote {padding: 0 12px;}.wiz-editor-body blockquote > :first-child {margin-top:0;}.wiz-editor-body blockquote > :last-child {margin-bottom:0;}.wiz-editor-body img {border:0;max-width:100%;height:auto !important;margin:2px 0;padding: 2px;vertical-align:bottom;}.wiz-editor-body table {border-collapse:collapse;border:1px solid #a7afbc;}.wiz-editor-body td,.wiz-editor-body th {padding:4px 8px;border-collapse:collapse;border:1px solid #a7afbc;min-height:28px;word-break:break-word;box-sizing: border-box;}.wiz-editor-body td > div:first-child {margin-top:0;}.wiz-editor-body td > div:last-child {margin-bottom:0;}.wiz-editor-body img.wiz-svg-image {box-shadow:1px 1px 4px #E8E8E8;}.wiz-editor-body .wiz-image-container {margin:0;max-width: 100%;display: inline-flex;flex-direction: column;}.wiz-editor-body .wiz-image-container .wiz-image-title {display:inline-block;text-align: center;color: #a7afbc;line-height: 18px;font-size: 12px;min-height: 18px;width: 100%;white-space: normal;}.wiz-hide {display:none !important;}.wiz-editor-body.wiz-editor-outline {padding-right:0; padding-left:0;}.wiz-editor-body.wiz-editor-outline .outline-container {margin:0; padding:0; line-height:1.5;}.wiz-editor-body.wiz-editor-outline .outline-container div {margin:0;}.wiz-editor-body.wiz-editor-outline .node {margin:0; padding: 0;}.wiz-editor-body.wiz-editor-outline .outline-container > .node {margin-right:24px; margin-left:30px;}.wiz-editor-body.wiz-editor-outline .node.collapsed .children {display:none;}.wiz-editor-body.wiz-editor-outline .node .row {position:relative; padding-left:26px;}.wiz-editor-body.wiz-editor-outline .node .operator-container {width:36px;position:absolute; top:4px; left:-18px;}.wiz-editor-body.wiz-editor-outline .node .operator-bar {position:absolute; top:0; left:0; right:0; bottom:0; display:flex; align-items:center; justify-content:center;}.wiz-editor-body.wiz-editor-outline .node .switch {width:18px; height:18px;display:flex;flex-direction: column;align-items: center;overflow: hidden;}.wiz-editor-body.wiz-editor-outline .node .switch i {font-size:20px;position:relative;left:-1px;top:-1px;}.wiz-editor-body.wiz-editor-outline .node .switch.active {cursor:pointer;color:transparent; transition:transform 200ms ease 0s;}.wiz-editor-body.wiz-editor-outline .node.collapsed .switch.active {transform:rotateZ(-90deg);}.wiz-editor-body.wiz-editor-outline .node .row:hover .switch.active {color:#505F79}.wiz-editor-body.wiz-editor-outline .node .dot {display:flex; align-items:center; justify-content:center; border-radius:100%; width:18px; height:18px;}.wiz-editor-body.wiz-editor-outline .node.collapsed .dot {background-color:rgba(80, 95, 121, .15);}.wiz-editor-body.wiz-editor-outline .node .dot-icon {background-color:#505F79; border-radius:100%; width:6px; height:6px;}.wiz-editor-body.wiz-editor-outline .node .child {margin-left:8px; border-left:1px solid #E6E9ED; padding-left:17px;}.wiz-editor-body.wiz-editor-outline .node .content {flex:1;outline:none; padding:4px 0;}.wiz-editor-body.wiz-editor-outline .node div.content {font-size:1rem;}.wiz-editor-body.wiz-editor-outline .node.complete > .row .content {text-decoration:line-through;color:#A7AFBC;}.wiz-editor-body.wiz-editor-outline .node .notes {outline:none; font-size:.8rem; color:#A7AFBC;}.wiz-editor-body.wiz-editor-outline .node .image {outline:none; padding-top:4px; padding-bottom:4px;}.wiz-editor-body.wiz-editor-outline .outline-container h1,.wiz-editor-body.wiz-editor-outline .outline-container h2,.wiz-editor-body.wiz-editor-outline .outline-container h3,.wiz-editor-body.wiz-editor-outline .outline-container h4,.wiz-editor-body.wiz-editor-outline .outline-container h5,.wiz-editor-body.wiz-editor-outline .outline-container h6 {margin:0;}body, .wiz-editor-body {  padding-left: 48px;  padding-right: 48px;}</style></head>

<body class="wiz-editor-body " data-wiz-document-type="common" spellcheck="false" style="opacity: 1;" onload="parent.window.document.all.dd.height=document.body.scrollHeight">
  <div style="text-align: center;"><span data-wiz-span="data-wiz-span" style="font-size: 1.667rem;"><b></b></span></div><div><br></div><div><br></div><div>标签：</div><div>&nbsp; &nbsp; WebSocket 概念；WebSocket 应用<br></div><div><span>&nbsp; &nbsp; 协议、TCP、HTTP、长连接</span></div><div>&nbsp; &nbsp;&nbsp;React、Vue 整合 WebSocket ；Node、Java 实现 WebSocket 服务端</div><div><br></div><div><div><br><br></div><div><br></div><div><br></div><div><br></div><div><br></div></div><div><br></div><div><br></div><h1>WebSocket 概念：</h1><div><span>&nbsp; &nbsp; WebSocket 是 HTML5 开始提供的一种在单个 TCP 连接上进行全双工通讯的<span data-wiz-span="data-wiz-span" style="color: rgb(255, 255, 255); background-color: rgb(127, 127, 127);">协议</span>。</span><br></div><div>&nbsp; &nbsp; 简单来说，它和 http 一样，都是是一个基于 TCP 的通信协议，但 WebSocket 可以全双工通信。<span><br></span></div><div>&nbsp; &nbsp; WebSocket 并不等于 Java 中的 Socket，后者不是一个通信协议，而是一个编程思想、设计模式。<br></div><div>&nbsp; &nbsp; 关于长连接，WebSocket 的长连接和 Http1.1 的<span>长连接</span>并不是同一个概念。&nbsp;</div><div>&nbsp; &nbsp; WebSocket 先要用一次 <span data-wiz-span="data-wiz-span" style="background-color: rgb(127, 127, 127); color: rgb(255, 255, 255);">HTTP 协议</span>发连接请求（略像常规HTTP请求），完成<span data-wiz-span="data-wiz-span" style="color: rgb(255, 255, 255); background-color: rgb(127, 127, 127);">3次握手</span>后建立连接，然后再以 <span data-wiz-span="data-wiz-span" style="background-color: rgb(127, 127, 127); color: rgb(255, 255, 255);">Websocket 协议</span>实现源源不断的信息交互。<br></div><div><br></div><div><blockquote><div><img src="WebSocket_基础知识（index）_files/0.4277078533338791.png"></div><div><br></div></blockquote></div><blockquote><div><blockquote><div>红框是 WebSocket 的握手环节，该请求基于 http，Upgrage 标识表示该协议要从 Http 升级为 WebSocket 。</div><div>绿框是 WebSocket 的数据交互环节。</div></blockquote></div></blockquote><div><blockquote><div><div><img src="WebSocket_基础知识（index）_files/17b22500-c9eb-4093-810b-e53df5839399.jpg" width="811" height="475"></div></div></blockquote></div><blockquote><div><blockquote><div><div>WebSocket 协议在2008年诞生，2011年成为国际标准。现在所有浏览器都已经支持。</div><div><span>WebSocket 数据交互的消息只有有两种：文本、二进制数据。我们通常发送JSON格式的<span data-wiz-span="data-wiz-span" style="background-color: rgb(127, 127, 127); color: rgb(255, 255, 255);">文本</span>，这样以来浏览器处理起来就十分 easy。</span></div></div></blockquote></div></blockquote><div><br></div><div><br></div><h2><b>WebSocket 特点：</b></h2><div>&nbsp; &nbsp;&nbsp;它的最大特点就是，服务器可以主动向客户端推送信息，客户端也可以主动向服务器发送信息，是真正的双向平等对话，属于<a href="https://en.wikipedia.org/wiki/Push_technology">服务器推送技术</a>的一种。</div><div><br></div><div><br></div><h2><b>WebSocket 对象：</b></h2><div>WebSocket 对象分 <span data-wiz-span="data-wiz-span" style="background-color: rgb(127, 127, 127); color: rgb(255, 255, 255);">Server </span>和 <span data-wiz-span="data-wiz-span" style="background-color: rgb(127, 127, 127); color: rgb(255, 255, 255);">Client </span>，不过他们的属性、属性和方法基本都是一样的。以下列举的是都是通用的。</div><div><b><br></b></div><div><b>WebSocket 对象属性：</b></div><div>&nbsp; &nbsp; WebSocket 是一个标准，这个标准的实现里，会有一个 readyState 表示连接状态：<br></div><blockquote><blockquote><blockquote><div><span data-wiz-span="data-wiz-span" style="background-color: rgb(127, 127, 127); color: rgb(255, 255, 255);">CONNECTING</span>：值为0，表示正在连接。</div></blockquote></blockquote><blockquote><blockquote><div style="text-align: left;"><span data-wiz-span="data-wiz-span" style="color: rgb(255, 255, 255); background-color: rgb(127, 127, 127);">OPEN</span>：值为1，表示连接成功，可以通信了。</div></blockquote></blockquote><blockquote><blockquote><div style="text-align: left;"><span data-wiz-span="data-wiz-span" style="color: rgb(255, 255, 255); background-color: rgb(127, 127, 127);">CLOSING</span>：值为2，表示连接正在关闭。</div></blockquote></blockquote><blockquote><blockquote><div style="text-align: left;"><span data-wiz-span="data-wiz-span" style="color: rgb(255, 255, 255); background-color: rgb(127, 127, 127);">CLOSED</span>：值为3，表示连接已经关闭，或者打开连接失败。</div><div style="text-align: left;"><br></div><div style="text-align: left;">总结：连接和断开的进行时和完成时。</div></blockquote></blockquote></blockquote><div><br></div><div><b>WebSocket 对象事件：&nbsp;</b> &nbsp;&nbsp;</div><div class="wiz-table-container" style="position: relative; padding: 0px;" ><div class="wiz-table-body" ><table class="relative-table confluenceTable" style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 0.813rem; background-color: rgb(254, 254, 242);"><tbody><tr><th class="confluenceTh" style="background-color:rgb(250, 250, 250);">事件</th><th class="confluenceTh" style="background-color:rgb(250, 250, 250);">事件处理程序</th><th class="confluenceTh" style="background-color:rgb(250, 250, 250);">描述</th></tr><tr><td class="confluenceTd">open</td><td class="confluenceTd">ws.onopen</td><td class="confluenceTd">连接建立时触发</td></tr><tr><td class="confluenceTd">message</td><td class="confluenceTd"><span style="font-family: Verdana, Arial, Helvetica, sans-serif;">ws</span>.onmessage</td><td class="confluenceTd">客户端接收服务端数据时触发</td></tr><tr><td class="confluenceTd">error</td><td class="confluenceTd"><span style="font-family: Verdana, Arial, Helvetica, sans-serif;">ws</span>.onerror</td><td class="confluenceTd">通信发生错误时触发</td></tr><tr><td class="confluenceTd">close</td><td class="confluenceTd"><span style="font-family: Verdana, Arial, Helvetica, sans-serif;">ws</span>.onclose</td><td class="confluenceTd">连接关闭时触发</td></tr></tbody></table></div></div><div><br></div><div><br></div><div><b>WebSocket 对象方法：</b></div><div data-mode="Shell" data-theme="eclipse"  id="wiz_cm_1636112345730_1866" class="wiz-code-container"><textarea style="display:none;">// 发送数据
ws.send();  
// 关闭连接
ws.close();</textarea><wiz_code_mirror><div class="CodeMirror cm-s-eclipse" data-id="wiz_cm_1636112345730_1866"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 20px; left: 34px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class=" wiz-hide wiz_CodeMirror-vscrollbar" tabindex="-1" cm-not-content="true" style="width: 18px; pointer-events: none;"><div style="min-width: 1px; height: 0px;"></div></div><div class=" wiz-hide wiz_CodeMirror-hscrollbar" tabindex="-1" cm-not-content="true" style="height: 18px; pointer-events: none;"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 30px; margin-bottom: 0px; border-right-width: 30px; min-height: 104px; min-width: 99.375px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"><pre class="CodeMirror-line-like"></pre><div class="CodeMirror-linenumber CodeMirror-gutter-elt"><div>4</div></div></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class=" wiz-hide wiz_CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 4px; top: 0px; height: 24px;">&nbsp;</div></div><div class="CodeMirror-code" role="presentation"><div style="position: relative;" class="CodeMirror-activeline"><div class=" wiz-hide wiz_CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: -30px; width: 30px;"></div><div class="CodeMirror-gutter-wrapper CodeMirror-activeline-gutter" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">1</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;">// 发送数据</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">2</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;">ws.send();  </span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">3</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;">// 关闭连接</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">4</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;">ws.close();</span></pre></div></div></div></div></div></div><div style="position: absolute; height: 13px; width: 1px; border-bottom: 0px solid transparent; top: 104px;"></div><div class="CodeMirror-gutters" style="height: 134px;"><div class="CodeMirror-gutter CodeMirror-linenumbers" style="width: 29px;"></div></div></div></div></wiz_code_mirror></div><div><br></div><div><br></div><div><b>WebSocket 原理和机制：</b>&nbsp;&nbsp;</div><blockquote><div>WebSocket 是 HTML5 一种新的协议。它实现了浏览器与服务器全双工通信，能更好的节省服务器资源和带宽并达到实时通讯，它建立在 TCP 之上，同 HTTP 一样通过 TCP 来传输数据，但是它和HTTP 最大不同是：</div></blockquote><blockquote><blockquote><div>WebSocket 是一种双向通信协议，在基于http建立连接后，WebSocket 服务器和 browser都能主动向对方发送或接收数据，就像 Socket 一样；WebSocket 需要客户端用 HTTP 和服务器端通过握手建立连接 WebSocket 连接，连接成功后才能相互通信，实现长连接。（肯定得先打通 TCP 传输通道，但这是底层的，先不用管，现在说的是顶层 7 层协议的握手）</div></blockquote></blockquote><div><br></div><div><ul><li>WebSocket <span data-wiz-span="data-wiz-span" style="background-color: rgb(127, 127, 127); color: rgb(255, 255, 255);">客户端</span>连接报文</li></ul></div><div data-mode="JavaScript" data-theme="eclipse"  id="wiz_cm_1636112903554_7897" class="wiz-code-container"><textarea style="display:none;">GET /webfin/websocket/ HTTP/1.1
Host: localhost
Upgrade: websocket
Connection: Upgrade
Sec-WebSocket-Key: xqBt3ImNzJbYqRINxEFlkg==
Origin: http://localhost:8080
Sec-WebSocket-Version: 13</textarea><wiz_code_mirror><div class="CodeMirror cm-s-eclipse" data-id="wiz_cm_1636112903554_7897"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 20px; left: 34px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class=" wiz-hide wiz_CodeMirror-vscrollbar" tabindex="-1" cm-not-content="true" style="width: 18px; pointer-events: none;"><div style="min-width: 1px; height: 0px;"></div></div><div class=" wiz-hide wiz_CodeMirror-hscrollbar" tabindex="-1" cm-not-content="true" style="height: 18px; pointer-events: none;"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 30px; margin-bottom: 0px; border-right-width: 30px; min-height: 176px; min-width: 338.031px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"><pre class="CodeMirror-line-like"></pre><div class="CodeMirror-linenumber CodeMirror-gutter-elt"><div>7</div></div></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class=" wiz-hide wiz_CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 4px; top: 0px; height: 24px;">&nbsp;</div></div><div class="CodeMirror-code" role="presentation" style=""><div style="position: relative;" class="CodeMirror-activeline"><div class=" wiz-hide wiz_CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: -30px; width: 30px;"></div><div class="CodeMirror-gutter-wrapper CodeMirror-activeline-gutter" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">1</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable">GET</span> <span class="cm-operator">/</span><span class="cm-variable">webfin</span><span class="cm-operator">/</span><span class="cm-variable">websocket</span><span class="cm-operator">/</span> <span class="cm-variable">HTTP</span><span class="cm-operator">/</span><span class="cm-number">1.1</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">2</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable">Host</span>: <span class="cm-variable">localhost</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">3</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable">Upgrade</span>: <span class="cm-variable">websocket</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">4</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable">Connection</span>: <span class="cm-variable">Upgrade</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">5</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable">Sec</span><span class="cm-operator">-</span><span class="cm-variable">WebSocket</span><span class="cm-operator">-</span><span class="cm-variable">Key</span>: <span class="cm-variable">xqBt3ImNzJbYqRINxEFlkg</span><span class="cm-operator">==</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">6</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable">Origin</span>: <span class="cm-variable">http</span>:<span class="cm-comment">//localhost:8080</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">7</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable">Sec</span><span class="cm-operator">-</span><span class="cm-variable">WebSocket</span><span class="cm-operator">-</span><span class="cm-variable">Version</span>: <span class="cm-number">13</span></span></pre></div></div></div></div></div></div><div style="position: absolute; height: 13px; width: 1px; border-bottom: 0px solid transparent; top: 176px;"></div><div class="CodeMirror-gutters" style="height: 206px;"><div class="CodeMirror-gutter CodeMirror-linenumbers" style="width: 29px;"></div></div></div></div></wiz_code_mirror></div><blockquote><div>可以看到，客户端发起的 WebSocket 连接报文类似传统 HTTP 报文，”Upgrade：websocket”参数值表明这是 WebSocket 类型请求，“Sec-WebSocket-Key”是 WebSocket 客户端发送的一个 base64 编码的密文，要求服务端必须返回一个对应加密的“Sec-WebSocket-Accept”应答，否则客户端会抛出“Error during WebSocket handshake”错误，并关闭连接。</div></blockquote><div><br></div><div><br></div><div><ul><li>WebSocket <span data-wiz-span="data-wiz-span" style="background-color: rgb(127, 127, 127); color: rgb(255, 255, 255);">服务端</span>响应报文</li></ul></div><div data-mode="JavaScript" data-theme="eclipse"  id="wiz_cm_1636112840388_1705" class="wiz-code-container"><textarea style="display:none;">HTTP/1.1 101 Switching Protocols
Upgrade: websocket
Connection: Upgrade
Sec-WebSocket-Accept: K7DJLdLooIwIG/MOpvWFB3y3FE8=</textarea><wiz_code_mirror><div class="CodeMirror cm-s-eclipse" data-id="wiz_cm_1636112840388_1705"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 20px; left: 34px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class=" wiz-hide wiz_CodeMirror-vscrollbar" tabindex="-1" cm-not-content="true" style="width: 18px; pointer-events: none;"><div style="min-width: 1px; height: 0px;"></div></div><div class=" wiz-hide wiz_CodeMirror-hscrollbar" tabindex="-1" cm-not-content="true" style="height: 18px; pointer-events: none;"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 30px; margin-bottom: 0px; border-right-width: 30px; min-height: 104px; min-width: 391.938px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"><pre class="CodeMirror-line-like"></pre><div class="CodeMirror-linenumber CodeMirror-gutter-elt"><div>4</div></div></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class=" wiz-hide wiz_CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 4px; top: 0px; height: 24px;">&nbsp;</div></div><div class="CodeMirror-code" role="presentation"><div style="position: relative;" class="CodeMirror-activeline"><div class=" wiz-hide wiz_CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: -30px; width: 30px;"></div><div class="CodeMirror-gutter-wrapper CodeMirror-activeline-gutter" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">1</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable">HTTP</span><span class="cm-operator">/</span><span class="cm-number">1.1</span> <span class="cm-number">101</span> <span class="cm-variable">Switching</span> <span class="cm-variable">Protocols</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">2</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable">Upgrade</span>: <span class="cm-variable">websocket</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">3</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable">Connection</span>: <span class="cm-variable">Upgrade</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">4</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable">Sec</span><span class="cm-operator">-</span><span class="cm-variable">WebSocket</span><span class="cm-operator">-</span><span class="cm-variable">Accept</span>: <span class="cm-variable">K7DJLdLooIwIG</span><span class="cm-operator">/</span><span class="cm-variable">MOpvWFB3y3FE8</span><span class="cm-operator">=</span></span></pre></div></div></div></div></div></div><div style="position: absolute; height: 13px; width: 1px; border-bottom: 0px solid transparent; top: 104px;"></div><div class="CodeMirror-gutters" style="height: 134px;"><div class="CodeMirror-gutter CodeMirror-linenumbers" style="width: 29px;"></div></div></div></div></wiz_code_mirror></div><div><blockquote><div>“Sec-WebSocket-Accept” 的值是服务端采用与客户端一致的密钥计算出来后返回客户端的</div><div>“HTTP/1.1 101 Switching Protocols”表示服务端接受 WebSocket 协议的客户端连接</div><div><br></div><div>经过这样的请求-响应处理后，客户端服务端的 WebSocket 连接握手成功, 后续就可以进行 TCP 通讯了。<br></div></blockquote></div><div><br></div><div><br></div><div><br></div><div><br></div><div><b style="font-size:1.5rem">Ref ：</b></div><div>&nbsp; &nbsp; &nbsp; &nbsp; <a href="https://www.runoob.com/html/html5-websocket.html">《runoob - HTML5 WebSocket》</a><span>&nbsp; &nbsp;&nbsp;</span></div><div>&nbsp; &nbsp; &nbsp; &nbsp; <a href="https://blog.csdn.net/qq32933432/article/details/97943282">《csdn - 谈谈http的长连接和websocket的长连接》</a><span>&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</span></div><div>&nbsp; &nbsp; &nbsp; &nbsp; <a href="https://zhuanlan.zhihu.com/p/113286469">《知乎 - 什么是WebSocket，它与HTTP有何不同？》</a><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; <a href="https://blog.csdn.net/CNHK1225/article/details/78291206》">《csdn - WebSocket与Http关系》</a><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; <a href="https://www.bilibili.com/video/BV1r54y1D72U/?spm_id_from=333.788.recommend_more_video.-1">《WebSocket打造在线聊天室【完结】》</a><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<a href="https://www.cnblogs.com/cangqinglang/p/8331120.html">《cnblogs - Websocket(一)——原理及基本属性和方法》</a><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; <a href="https://www.cnblogs.com/gaby-gl/articles/9765013.html">《cnblogs - websocket实现多房间多用户聊天室》</a><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; <a href="https://www.liaoxuefeng.com/wiki/1022910821149312/1103303693824096">《<span>liaoxuefeng - WebSocket》</span></a><br></div><div><br></div><div><br></div><div><br></div><div><br></div><h1>WebSocket 意义：</h1><blockquote><div>初次接触 WebSocket 的人，都会问同样的问题：我们已经有了 HTTP 协议，为什么还需要另一个协议？它能带来什么好处？</div><div>答案很简单，因为 HTTP 协议有一个缺陷：通信只能由客户端发起。</div><div>举例来说，我们想了解今天的天气，只能是客户端向服务器发出请求，服务器返回查询结果。HTTP 协议做不到服务器主动向客户端推送信息。</div><div><br></div><div><b>Ref：</b></div><div>&nbsp; &nbsp; cnblogs - Websocket(一)——原理及基本属性和方法</div><div>&nbsp; &nbsp; <a href="https://www.cnblogs.com/cangqinglang/p/8331120.html">https://www.cnblogs.com/cangqinglang/p/8331120.html</a></div></blockquote><div> <br></div><div><br></div><div><br></div><div><br></div><div><br></div><div><br></div><h1>WebSocket 应用：</h1><div><br></div><div><span>WebSocket 常被用于开发</span><span><span data-wiz-span="data-wiz-span" style="color: rgb(255, 104, 32);">即时通讯</span>、<span data-wiz-span="data-wiz-span" style="color: rgb(255, 104, 32);">消息推送</span>等功能。</span></div>

<div><span>相关项目实例详见：</span><br></div>
<div><span></span><span>《</span><span>笔记：</span><a href="/views/技术总结/前端技术/为知笔记/WebSocket_项目实例合集之即时通讯.html">WebSocket_项目实例合集之即时通讯</a>》<br></div>
<div><span></span><span>《</span><span>笔记：</span><a href="/views/技术总结/前端技术/为知笔记/WebSocket_项目实例合集之消息推送.html">WebSocket_项目实例合集之消息推送</a>》<br></div>

<div><div><div>&nbsp; &nbsp;&nbsp;</div><div><div><b>WebSocket 常用第三方插件：</b></div><div><span>● socket.io：</span>&nbsp; &nbsp;&nbsp;</div></div></div></div><blockquote><div><div><div><div>back-end and <span>front-end</span>：&nbsp;&nbsp;<a href="https://socket.io/get-started/chat" style="text-decoration-skip-ink: none;">https://socket.io/get-started/chat</a>&nbsp; &nbsp;&nbsp;</div></div></div></div><div><div><div>uni-app-front-end：&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<a href="http://weappsocket.matong.io/" style="text-decoration-skip-ink: none;">http://weappsocket.matong.io/</a>&nbsp;</div><div><span><br></span></div><div><span>Tips：socket.io 不是 WebSocket 的实现，但具备 WebSocket 的功能，因此前端不能用浏览器内置的 WebSocket 模块。</span></div></div></div></blockquote><div><div><span><br></span></div><div><span>●<span>&nbsp;</span></span><span>ws：</span></div></div><blockquote><div><div><span>back-end and<span>&nbsp;</span></span><span>front-end</span><span>：&nbsp;</span><a href="https://github.com/websockets/ws&nbsp;" style="text-decoration-skip-ink: none;">https://github.com/websockets/ws&nbsp;</a></div></div><div><br></div><div><div><span>Tips：</span><span>ws&nbsp;</span><span>是 WebSocket 的实现，因此前端可用这个插件的</span><span><span>&nbsp;</span>WebSocket 模块</span><span>，也可以用浏览器内置的 WebSocket 模块。</span></div></div></blockquote><div><div><br></div><div><br></div><div><br></div><div><br></div><h2>即时通讯</h2></div><blockquote><div><div>详见笔记《<a href="/views/技术总结/前端技术/为知笔记/WebSocket_应用之即时通讯.html" style="text-decoration-skip-ink: none;">WebSocket_应用之即时通讯</a>》</div></div><div><div><br></div></div></blockquote><div><div><br></div><h2>消息推送</h2></div><blockquote><div><div><span>详见笔记</span>《<a href="/views/技术总结/前端技术/为知笔记/WebSocket_应用之消息推送.html">WebSocket_应用之消息推送</a>》</div></div><div><div><br></div></div></blockquote><div><div><br></div><div><br></div><div><br></div><div><br></div><div><br></div><div><br></div></div><div><br></div><div><h1><span>WebSocket 快速上手：</span></h1><div><span data-wiz-span="data-wiz-span" style="font-size: 1.5rem;"><b><br></b></span></div><div><span data-wiz-span="data-wiz-span" style="font-size: 1.5rem;"><b>搭建最简单的 WebSocket 系统：</b></span></div><div><br></div><div><b><span>WebSocket<span>&nbsp;</span></span>环境准备：</b></div></div><blockquote><div><div><span>WebSocket</span><span>&nbsp;需要前端和后端的同时支持，即客户端和服务端的同时支持。</span></div></div><div><div>对于 WebSocket 客户端，在浏览器上已经提供了对它的支持（因为H5新特性），因此不需要第三方库（<span>WebSocket 插件包）</span>，但在 NodeJS 上没有提供支持，因此需要第三方库（<span>WebSocket 插件包）</span>。</div></div><div><div>对于 WebSocket 服务端，它只能在 NodeJS 上运行，因此必须要<span>第三方库（</span><span>WebSocket 插件包）</span>。</div></div><div><div>在 NodeJS 中，无论实现 WebSocket 的客户端还是服务端，<span>第三方库（</span><span>WebSocket 插件包）只需添加一个，因为它两个端都支持。</span></div></div></blockquote><div><div><br></div></div><blockquote><div><div><b>安装第三方 WebSocket 插件包：</b></div></div><div><div>&nbsp; &nbsp;&nbsp;方法 1：命令安装：</div></div></blockquote><div data-mode="Shell" data-theme="eclipse"  id="wiz_cm_1635861461121_2629" class="wiz-code-container"><textarea style="display:none;">npm install ws</textarea><wiz_code_mirror><div class="CodeMirror cm-s-eclipse" data-id="wiz_cm_1635861461121_2629"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 20px; left: 34px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class=" wiz-hide wiz_CodeMirror-vscrollbar" tabindex="-1" cm-not-content="true" style="width: 18px; pointer-events: none;"><div style="min-width: 1px; height: 0px;"></div></div><div class=" wiz-hide wiz_CodeMirror-hscrollbar" tabindex="-1" cm-not-content="true" style="height: 18px; pointer-events: none;"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 30px; margin-bottom: 0px; border-right-width: 30px; min-height: 32px; min-width: 114.766px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"><pre class="CodeMirror-line-like"></pre><div class="CodeMirror-linenumber CodeMirror-gutter-elt"><div>1</div></div></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class=" wiz-hide wiz_CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 4px; top: 0px; height: 24px;">&nbsp;</div></div><div class="CodeMirror-code" role="presentation"><div style="position: relative;" class="CodeMirror-activeline"><div class=" wiz-hide wiz_CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: -30px; width: 30px;"></div><div class="CodeMirror-gutter-wrapper CodeMirror-activeline-gutter" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">1</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-builtin">npm</span> install ws</span></pre></div></div></div></div></div></div><div style="position: absolute; height: 13px; width: 1px; border-bottom: 0px solid transparent; top: 32px;"></div><div class="CodeMirror-gutters" style="height: 62px;"><div class="CodeMirror-gutter CodeMirror-linenumbers" style="width: 29px;"></div></div></div></div></wiz_code_mirror></div><blockquote><div><div><span>&nbsp; &nbsp; 方法 2：</span>直接从 github 下载插件包，解压到项目中直接引用</div></div><div><span>&nbsp; &nbsp; &nbsp; &nbsp; 如： <a href="https://github.com/websockets/ws&nbsp;">https://github.com/websockets/ws&nbsp;</a></span></div></blockquote><div data-mode="JavaScript" data-theme="eclipse"  id="wiz_cm_1635861461108_6108" class="wiz-code-container"><textarea style="display:none;">var WebSocket = require('./myLib/ws');</textarea><wiz_code_mirror><div class="CodeMirror cm-s-eclipse" data-id="wiz_cm_1635861461108_6108"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 20px; left: 34px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class=" wiz-hide wiz_CodeMirror-vscrollbar" tabindex="-1" cm-not-content="true" style="width: 18px; pointer-events: none;"><div style="min-width: 1px; height: 0px;"></div></div><div class=" wiz-hide wiz_CodeMirror-hscrollbar" tabindex="-1" cm-not-content="true" style="height: 18px; pointer-events: none;"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 30px; margin-bottom: 0px; border-right-width: 30px; min-height: 32px; min-width: 299.563px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"><pre class="CodeMirror-line-like"></pre><div class="CodeMirror-linenumber CodeMirror-gutter-elt"><div>1</div></div></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class=" wiz-hide wiz_CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 4px; top: 0px; height: 24px;">&nbsp;</div></div><div class="CodeMirror-code" role="presentation"><div style="position: relative;" class="CodeMirror-activeline"><div class=" wiz-hide wiz_CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: -30px; width: 30px;"></div><div class="CodeMirror-gutter-wrapper CodeMirror-activeline-gutter" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">1</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">var</span> <span class="cm-def">WebSocket</span> <span class="cm-operator">=</span> <span class="cm-variable">require</span>(<span class="cm-string">'./myLib/ws'</span>);</span></pre></div></div></div></div></div></div><div style="position: absolute; height: 13px; width: 1px; border-bottom: 0px solid transparent; top: 32px;"></div><div class="CodeMirror-gutters" style="height: 62px;"><div class="CodeMirror-gutter CodeMirror-linenumbers" style="width: 29px;"></div></div></div></div></wiz_code_mirror></div><div><br></div><div><b>WebSocket 客户端的创建：</b></div><div>&nbsp; &nbsp; 客户端只需用<span><span>&nbsp;</span>ws 创建一个 WebSocket（Client）对象，给相关事件绑定回调函数，即可开启 WebSocket 之旅。</span><br></div><div data-mode="JavaScript" data-theme="eclipse"  id="wiz_cm_1635862399039_5531" class="wiz-code-container"><textarea style="display:none;">// client.js

// 如果在浏览器中运行此代码，就不需要引入第三方库
var WebSocket = require('./myLib/ws');

// 创建 WebSocket Client 对象，并向服务器发起 WebSocket 请求，建立 WebSocket 连接
// var webSocketInstance = new WebSocket("ws://139.196.42.209:8090");      // 参数: url, protocals?
var webSocketClient = new WebSocket("ws://127.0.0.1:8888");      // 参数: url, protocals?

// 给事件绑定执行函数
webSocketClient.onopen = function(){
  console.info("WebSocket connection is opened successfully! :-) ");
  // 利用控制台输入来发送消息
  process.stdin.setEncoding('utf8');
  process.stdout.write("输入你要发送的消息：");
  process.stdin.on('data', (input)=&gt;{   // 回车就会触发，数据只截取回车前的那一行
    input = input.toString().trim();
    webSocketClient.send(input);
  });
}
webSocketClient.onerror = function(){
  console.info("WebSocket connection failed to be opened! :-&lt; ");
};
webSocketClient.onmessage = function(messageEvent){
  // console.info("messageEvent: ", messageEvent);
  console.info("server push message: ", messageEvent.data);
}

// 发送消息
// webSocketClient.send("");

// 关闭 WebSocket Connection
// webSocketClient.colose();</textarea><wiz_code_mirror><div class="CodeMirror cm-s-eclipse" data-id="wiz_cm_1635862399039_5531"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 20px; left: 34px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class=" wiz-hide wiz_CodeMirror-vscrollbar" tabindex="-1" cm-not-content="true" style="width: 18px; pointer-events: none;"><div style="min-width: 1px; height: 0px;"></div></div><div class=" wiz-hide wiz_CodeMirror-hscrollbar" tabindex="-1" cm-not-content="true" style="height: 18px; pointer-events: none;"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 30px; margin-bottom: 0px; border-right-width: 30px; min-height: 800px; min-width: 766.25px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"><pre class="CodeMirror-line-like"></pre><div class="CodeMirror-linenumber CodeMirror-gutter-elt"><div>33</div></div></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class=" wiz-hide wiz_CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 4px; top: 0px; height: 24px;">&nbsp;</div></div><div class="CodeMirror-code" role="presentation" style=""><div style="position: relative;" class="CodeMirror-activeline"><div class=" wiz-hide wiz_CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: -30px; width: 30px;"></div><div class="CodeMirror-gutter-wrapper CodeMirror-activeline-gutter" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">1</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment">// client.js</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">2</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right:0.1px"></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">3</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment">// 如果在浏览器中运行此代码，就不需要引入第三方库</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">4</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">var</span> <span class="cm-def">WebSocket</span> <span class="cm-operator">=</span> <span class="cm-variable">require</span>(<span class="cm-string">'./myLib/ws'</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">5</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right:0.1px"></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">6</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment">// 创建 WebSocket Client 对象，并向服务器发起 WebSocket 请求，建立 WebSocket 连接</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">7</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment">// var webSocketInstance = new WebSocket("ws://139.196.42.209:8090");      // 参数: url, protocals?</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">8</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">var</span> <span class="cm-def">webSocketClient</span> <span class="cm-operator">=</span> <span class="cm-keyword">new</span> <span class="cm-variable">WebSocket</span>(<span class="cm-string">"ws://127.0.0.1:8888"</span>);      <span class="cm-comment">// 参数: url, protocals?</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">9</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right:0.1px"></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">10</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment">// 给事件绑定执行函数</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">11</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable">webSocketClient</span>.<span class="cm-property">onopen</span> <span class="cm-operator">=</span> <span class="cm-keyword">function</span>(){</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">12</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;">  <span class="cm-variable">console</span>.<span class="cm-property">info</span>(<span class="cm-string">"WebSocket connection is opened successfully! :-) "</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">13</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;">  <span class="cm-comment">// 利用控制台输入来发送消息</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">14</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;">  <span class="cm-variable">process</span>.<span class="cm-property">stdin</span>.<span class="cm-property">setEncoding</span>(<span class="cm-string">'utf8'</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">15</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;">  <span class="cm-variable">process</span>.<span class="cm-property">stdout</span>.<span class="cm-property">write</span>(<span class="cm-string">"输入你要发送的消息："</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">16</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;">  <span class="cm-variable">process</span>.<span class="cm-property">stdin</span>.<span class="cm-property">on</span>(<span class="cm-string">'data'</span>, (<span class="cm-def">input</span>)<span class="cm-operator">=&gt;</span>{   <span class="cm-comment">// 回车就会触发，数据只截取回车前的那一行</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">17</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;">    <span class="cm-variable-2">input</span> <span class="cm-operator">=</span> <span class="cm-variable-2">input</span>.<span class="cm-property">toString</span>().<span class="cm-property">trim</span>();</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">18</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;">    <span class="cm-variable">webSocketClient</span>.<span class="cm-property">send</span>(<span class="cm-variable-2">input</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">19</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;">  });</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">20</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;">}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">21</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable">webSocketClient</span>.<span class="cm-property">onerror</span> <span class="cm-operator">=</span> <span class="cm-keyword">function</span>(){</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">22</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;">  <span class="cm-variable">console</span>.<span class="cm-property">info</span>(<span class="cm-string">"WebSocket connection failed to be opened! :-&lt; "</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">23</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;">};</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">24</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable">webSocketClient</span>.<span class="cm-property">onmessage</span> <span class="cm-operator">=</span> <span class="cm-keyword">function</span>(<span class="cm-def">messageEvent</span>){</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">25</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;">  <span class="cm-comment">// console.info("messageEvent: ", messageEvent);</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">26</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;">  <span class="cm-variable">console</span>.<span class="cm-property">info</span>(<span class="cm-string">"server push message: "</span>, <span class="cm-variable-2">messageEvent</span>.<span class="cm-property">data</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">27</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;">}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">28</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right:0.1px"></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">29</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment">// 发送消息</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">30</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment">// webSocketClient.send("");</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">31</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right:0.1px"></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">32</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment">// 关闭 WebSocket Connection</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">33</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment">// webSocketClient.colose();</span></span></pre></div></div></div></div></div></div><div style="position: absolute; height: 13px; width: 1px; border-bottom: 0px solid transparent; top: 800px;"></div><div class="CodeMirror-gutters" style="height: 830px;"><div class="CodeMirror-gutter CodeMirror-linenumbers" style="width: 29px;"></div></div></div></div></wiz_code_mirror></div><div><br></div><div>&nbsp; &nbsp; 启动客户端：<span>&nbsp; &nbsp;&nbsp;</span></div><div data-mode="Shell" data-theme="eclipse"  id="wiz_cm_1635863812013_3565" class="wiz-code-container"><textarea style="display:none;">node client.js</textarea><wiz_code_mirror><div class="CodeMirror cm-s-eclipse" data-id="wiz_cm_1635863812013_3565"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 20px; left: 34px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class=" wiz-hide wiz_CodeMirror-vscrollbar" tabindex="-1" cm-not-content="true" style="width: 18px; pointer-events: none;"><div style="min-width: 1px; height: 0px;"></div></div><div class=" wiz-hide wiz_CodeMirror-hscrollbar" tabindex="-1" cm-not-content="true" style="height: 18px; pointer-events: none;"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 30px; margin-bottom: 0px; border-right-width: 30px; min-height: 32px; min-width: 114.781px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"><pre class="CodeMirror-line-like"></pre><div class="CodeMirror-linenumber CodeMirror-gutter-elt"><div>1</div></div></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class=" wiz-hide wiz_CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 4px; top: 0px; height: 24px;">&nbsp;</div></div><div class="CodeMirror-code" role="presentation"><div style="position: relative;" class="CodeMirror-activeline"><div class=" wiz-hide wiz_CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: -30px; width: 30px;"></div><div class="CodeMirror-gutter-wrapper CodeMirror-activeline-gutter" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">1</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-builtin">node</span> client.js</span></pre></div></div></div></div></div></div><div style="position: absolute; height: 13px; width: 1px; border-bottom: 0px solid transparent; top: 32px;"></div><div class="CodeMirror-gutters" style="height: 62px;"><div class="CodeMirror-gutter CodeMirror-linenumbers" style="width: 29px;"></div></div></div></div></wiz_code_mirror></div><div><br></div><div><b>WebSocket 服务端<span>的创建：</span></b></div><div>&nbsp; &nbsp; 服务端只需使用第三方插件包 ws 创建一个 WebSocket Server 对象，监听一个端口，即可开启 WebSocket 服务。</div><div><br></div><div>&nbsp; &nbsp; 最简单的 WebSocket 服务端代码：<br></div><div data-mode="JavaScript" data-theme="eclipse"  id="wiz_cm_1635860796121_4096" class="wiz-code-container"><textarea style="display:none;">// server.js
// import { WebSocketServer } from 'ws';    // Node.js 不支持 import、export 的语法，但支持 ES6 其他语法，如箭头函数。
var { WebSocketServer } = require('ws');
// 使用第三方插件创建 WebSocket Server 对象
const wsServer = new WebSocketServer({
  port: 8888		// 监听端口
});

// 给事件绑定执行函数
wsServer.on('connection', function connection(ws){
  // console.info("Server: The Connection from client is established succesfully!");
  ws.on('message', function message(data){	// data 是客户端 send 的数据。
    // console.log('received: %s', data);
    ws.send(data.toString());
  });

  // 送消息给客户端
  ws.send('the message sended by WebSocket server.');
    
  // 间隔 3s 自动发送消息给客户端
  setInterval(function(){
    ws.send("the message sended by WebSocket server. Time: " + new Date().toLocaleTimeString());
  }, 3000);

});</textarea><wiz_code_mirror><div class="CodeMirror cm-s-eclipse" data-id="wiz_cm_1635860796121_4096"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 20px; left: 34px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class=" wiz-hide wiz_CodeMirror-vscrollbar" tabindex="-1" cm-not-content="true" style="width: 18px; pointer-events: none;"><div style="min-width: 1px; height: 0px;"></div></div><div class=" wiz-hide wiz_CodeMirror-hscrollbar" tabindex="-1" cm-not-content="true" style="height: 18px; pointer-events: none;"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 30px; margin-bottom: 0px; border-right-width: 30px; min-height: 608px; min-width: 884.609px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"><pre class="CodeMirror-line-like"></pre><div class="CodeMirror-linenumber CodeMirror-gutter-elt"><div>25</div></div></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class=" wiz-hide wiz_CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 4px; top: 0px; height: 24px;">&nbsp;</div></div><div class="CodeMirror-code" role="presentation" style=""><div style="position: relative;" class="CodeMirror-activeline"><div class=" wiz-hide wiz_CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: -30px; width: 30px;"></div><div class="CodeMirror-gutter-wrapper CodeMirror-activeline-gutter" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">1</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment">// server.js</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">2</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment">// import { WebSocketServer } from 'ws';    // Node.js 不支持 import、export 的语法，但支持 ES6 其他语法，如箭头函数。</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">3</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">var</span> { <span class="cm-def">WebSocketServer</span> } <span class="cm-operator">=</span> <span class="cm-variable">require</span>(<span class="cm-string">'ws'</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">4</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment">// 使用第三方插件创建 WebSocket Server 对象</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">5</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">const</span> <span class="cm-def">wsServer</span> <span class="cm-operator">=</span> <span class="cm-keyword">new</span> <span class="cm-variable">WebSocketServer</span>({</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">6</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;">  <span class="cm-property">port</span>: <span class="cm-number">8888</span><span class="cm-tab" role="presentation" cm-text="	">    </span><span class="cm-tab" role="presentation" cm-text="	">    </span><span class="cm-comment">// 监听端口</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">7</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;">});</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">8</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right:0.1px"></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">9</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment">// 给事件绑定执行函数</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">10</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable">wsServer</span>.<span class="cm-property">on</span>(<span class="cm-string">'connection'</span>, <span class="cm-keyword">function</span> <span class="cm-def">connection</span>(<span class="cm-def">ws</span>){</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">11</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;">  <span class="cm-comment">// console.info("Server: The Connection from client is established succesfully!");</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">12</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;">  <span class="cm-variable-2">ws</span>.<span class="cm-property">on</span>(<span class="cm-string">'message'</span>, <span class="cm-keyword">function</span> <span class="cm-def">message</span>(<span class="cm-def">data</span>){<span class="cm-tab" role="presentation" cm-text="	">  </span><span class="cm-comment">// data 是客户端 send 的数据。</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">13</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;">    <span class="cm-comment">// console.log('received: %s', data);</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">14</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;">    <span class="cm-variable-2">ws</span>.<span class="cm-property">send</span>(<span class="cm-variable-2">data</span>.<span class="cm-property">toString</span>());</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">15</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;">  });</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">16</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right:0.1px"></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">17</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;">  <span class="cm-comment">// 送消息给客户端</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">18</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;">  <span class="cm-variable-2">ws</span>.<span class="cm-property">send</span>(<span class="cm-string">'the message sended by WebSocket server.'</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">19</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;">    </span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">20</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;">  <span class="cm-comment">// 间隔 3s 自动发送消息给客户端</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">21</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;">  <span class="cm-variable">setInterval</span>(<span class="cm-keyword">function</span>(){</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">22</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;">    <span class="cm-variable-2">ws</span>.<span class="cm-property">send</span>(<span class="cm-string">"the message sended by WebSocket server. Time: "</span> <span class="cm-operator">+</span> <span class="cm-keyword">new</span> <span class="cm-variable">Date</span>().<span class="cm-property">toLocaleTimeString</span>());</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">23</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;">  }, <span class="cm-number">3000</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">24</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right:0.1px"></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">25</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;">});</span></pre></div></div></div></div></div></div><div style="position: absolute; height: 13px; width: 1px; border-bottom: 0px solid transparent; top: 608px;"></div><div class="CodeMirror-gutters" style="height: 638px;"><div class="CodeMirror-gutter CodeMirror-linenumbers" style="width: 29px;"></div></div></div></div></wiz_code_mirror></div><blockquote></blockquote><div><div><br></div><div>&nbsp; &nbsp;&nbsp;启动服务端：<span>&nbsp; &nbsp;&nbsp;</span></div></div><div data-mode="Shell" data-theme="eclipse"  id="wiz_cm_1635863866175_8335" class="wiz-code-container"><textarea style="display:none;">node server.js</textarea><wiz_code_mirror><div class="CodeMirror cm-s-eclipse" data-id="wiz_cm_1635863866175_8335"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 20px; left: 34px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class=" wiz-hide wiz_CodeMirror-vscrollbar" tabindex="-1" cm-not-content="true" style="width: 18px; pointer-events: none;"><div style="min-width: 1px; height: 0px;"></div></div><div class=" wiz-hide wiz_CodeMirror-hscrollbar" tabindex="-1" cm-not-content="true" style="height: 18px; pointer-events: none;"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 30px; margin-bottom: 0px; border-right-width: 30px; min-height: 32px; min-width: 114.781px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"><pre class="CodeMirror-line-like"></pre><div class="CodeMirror-linenumber CodeMirror-gutter-elt"><div>1</div></div></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class=" wiz-hide wiz_CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 4px; top: 0px; height: 24px;">&nbsp;</div></div><div class="CodeMirror-code" role="presentation"><div style="position: relative;" class="CodeMirror-activeline"><div class=" wiz-hide wiz_CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: -30px; width: 30px;"></div><div class="CodeMirror-gutter-wrapper CodeMirror-activeline-gutter" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">1</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-builtin">node</span> server.js</span></pre></div></div></div></div></div></div><div style="position: absolute; height: 13px; width: 1px; border-bottom: 0px solid transparent; top: 32px;"></div><div class="CodeMirror-gutters" style="height: 62px;"><div class="CodeMirror-gutter CodeMirror-linenumbers" style="width: 29px;"></div></div></div></div></wiz_code_mirror></div><div><div><br></div></div><div><br></div><div><b>Ref：<span>&nbsp;</span></b></div><div>&nbsp; &nbsp; 阮一峰 - WebSocket 教程</div><div>&nbsp; &nbsp; <a href="https://www.ruanyifeng.com/blog/2017/05/websocket.html">https://www.ruanyifeng.com/blog/2017/05/websocket.html</a> </div><div><br></div><div><br></div><div><br></div><div><br></div><div><br></div><div><br></div><div><br></div><div><br></div><h1 style="font-size: 1.67rem;">WebSocket<span>&nbsp;小妙招</span></h1><h2><span>Node.js 中 Websocket 关联外部 Express（Http）服务器时使用同一端口</span></h2><div><span>Node.js 中 Websocket 关联外部 Http 服务器时，是可以使用同一端口的，但是如果启动 Http 服务器用的不是 Http 模块，而是基于 Http 模块的 Express 模块，按照官方文档的方法替换 Http 模块就行不通了。那怎么办呢？这时候只需要对 Express decorate（装饰）一下就可以了。具体操作参照 socket.io 的官方示例：</span></div><div data-mode="JavaScript" data-theme="eclipse"  id="wiz_cm_1636156085024_9893" class="wiz-code-container"><textarea style="display:none;">// Socket.IO 官方示例
const express = require('express');
const app = express();
const http = require('http');
const server = http.createServer(app);
const { Server } = require("socket.io");
const io = new Server(server);

app.get('/', (req, res) =&gt; {
  res.sendFile(__dirname + '/index.html');
});

io.on('connection', (socket) =&gt; {
  console.log('a user connected');
});

server.listen(3000, () =&gt; {
  console.log('listening on *:3000');
});</textarea><wiz_code_mirror><div class="CodeMirror cm-s-eclipse" data-id="wiz_cm_1636156085024_9893"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 20px; left: 34px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class=" wiz-hide wiz_CodeMirror-vscrollbar" tabindex="-1" cm-not-content="true" style="width: 18px; pointer-events: none;"><div style="min-width: 1px; height: 0px;"></div></div><div class=" wiz-hide wiz_CodeMirror-hscrollbar" tabindex="-1" cm-not-content="true" style="height: 18px; pointer-events: none;"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 30px; margin-bottom: 0px; border-right-width: 30px; min-height: 464px; min-width: 330.359px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"><pre class="CodeMirror-line-like"></pre><div class="CodeMirror-linenumber CodeMirror-gutter-elt"><div>19</div></div></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class=" wiz-hide wiz_CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 4px; top: 0px; height: 24px;">&nbsp;</div></div><div class="CodeMirror-code" role="presentation" style=""><div style="position: relative;" class="CodeMirror-activeline"><div class=" wiz-hide wiz_CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: -30px; width: 30px;"></div><div class="CodeMirror-gutter-wrapper CodeMirror-activeline-gutter" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">1</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment">// Socket.IO 官方示例</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">2</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">const</span> <span class="cm-def">express</span> <span class="cm-operator">=</span> <span class="cm-variable">require</span>(<span class="cm-string">'express'</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">3</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">const</span> <span class="cm-def">app</span> <span class="cm-operator">=</span> <span class="cm-variable">express</span>();</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">4</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">const</span> <span class="cm-def">http</span> <span class="cm-operator">=</span> <span class="cm-variable">require</span>(<span class="cm-string">'http'</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">5</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">const</span> <span class="cm-def">server</span> <span class="cm-operator">=</span> <span class="cm-variable">http</span>.<span class="cm-property">createServer</span>(<span class="cm-variable">app</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">6</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">const</span> { <span class="cm-def">Server</span> } <span class="cm-operator">=</span> <span class="cm-variable">require</span>(<span class="cm-string">"socket.io"</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">7</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">const</span> <span class="cm-def">io</span> <span class="cm-operator">=</span> <span class="cm-keyword">new</span> <span class="cm-variable">Server</span>(<span class="cm-variable">server</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">8</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right:0.1px"></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">9</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable">app</span>.<span class="cm-property">get</span>(<span class="cm-string">'/'</span>, (<span class="cm-def">req</span>, <span class="cm-def">res</span>) <span class="cm-operator">=&gt;</span> {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">10</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;">  <span class="cm-variable-2">res</span>.<span class="cm-property">sendFile</span>(<span class="cm-variable">__dirname</span> <span class="cm-operator">+</span> <span class="cm-string">'/index.html'</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">11</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;">});</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">12</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right:0.1px"></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">13</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable">io</span>.<span class="cm-property">on</span>(<span class="cm-string">'connection'</span>, (<span class="cm-def">socket</span>) <span class="cm-operator">=&gt;</span> {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">14</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;">  <span class="cm-variable">console</span>.<span class="cm-property">log</span>(<span class="cm-string">'a user connected'</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">15</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;">});</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">16</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right:0.1px"></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">17</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable">server</span>.<span class="cm-property">listen</span>(<span class="cm-number">3000</span>, () <span class="cm-operator">=&gt;</span> {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">18</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;">  <span class="cm-variable">console</span>.<span class="cm-property">log</span>(<span class="cm-string">'listening on *:3000'</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">19</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;">});</span></pre></div></div></div></div></div></div><div style="position: absolute; height: 13px; width: 1px; border-bottom: 0px solid transparent; top: 464px;"></div><div class="CodeMirror-gutters" style="height: 494px;"><div class="CodeMirror-gutter CodeMirror-linenumbers" style="width: 29px;"></div></div></div></div></wiz_code_mirror></div><div><span><br></span></div><div>WebSocket-WS 中官方文档没有 Express 相关用法，但实测发现上述方法也可行，代码如下：</div><div data-mode="JavaScript" data-theme="eclipse"  id="wiz_cm_1636156169378_1144" class="wiz-code-container"><textarea style="display:none;">/**
 * Node.js 中 websocket 关联外部服务器使用同一端口的方法（适用于 ws、socket-io）
 */

// 第三方 WebSocket、Express，内置 Http
var { WebSocketServer } = require('ws'); 
var { createServer } = require('http'); 
var express = require('express');

// Http 套 Express
var expressApp = express();
var httpServer = createServer(expressApp);     // http 包裹（Decorate装饰）express 的实例 expressApp
var port = 3000;

// expressApp.listen(port, () =&gt; { console.info("Server is running on: " + port); });

// 新建 WebSocket Server 对象，关联 Http Server
const webSocketServer = new WebSocketServer({
  // port: 8888,                    // 青铜操作：单独监听一个端口
  server: httpServer                // 白银操作：监听 http 服务器
  // server: expressApp              // 白银操作之错误操作：websocket-ws 关联外部 http 服务器时，不支持 express 对象，需 http 对象            或被 http 包裹（Decorate装饰）的对象
});

// 为 WebSocket Server 事件绑定执行函数
webSocketServer.on('connection', function connection(ws){
  console.info("A client connected in。");
  ws.on('message', function message(msg){
    console.log('received: %s', msg);
    ws.send(msg.toString());
  });                   

  ws.send('Congratulations! You connected successfully!! (the message sended by WebSocket server)');

});

expressApp.get('/', (req, res) =&gt; {
  res.send('Hello World!')
})

// Http Server 开始监听端口
// expressApp.listen(port, () =&gt; { console.info("Server is running on: " + port); });
httpServer.listen(port, () =&gt; { console.info("Server is running on: " + port); });</textarea><wiz_code_mirror><div class="CodeMirror cm-s-eclipse" data-id="wiz_cm_1636156169378_1144"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 20px; left: 34px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class=" wiz-hide wiz_CodeMirror-vscrollbar" tabindex="-1" cm-not-content="true" style="width: 18px; pointer-events: none;"><div style="min-width: 1px; height: 0px;"></div></div><div class=" wiz-hide wiz_CodeMirror-hscrollbar" tabindex="-1" cm-not-content="true" style="display: block; right: 0px; left: 0px; height: 18px; pointer-events: none;"><div style="height: 100%; min-height: 1px; width: 1353px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 30px; margin-bottom: 0px; border-right-width: 30px; min-height: 1016px; min-width: 1322.75px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"><pre class="CodeMirror-line-like"></pre><div class="CodeMirror-linenumber CodeMirror-gutter-elt"><div>42</div></div></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class=" wiz-hide wiz_CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 4px; top: 0px; height: 24px;">&nbsp;</div></div><div class="CodeMirror-code" role="presentation" style=""><div style="position: relative;" class="CodeMirror-activeline"><div class=" wiz-hide wiz_CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: -30px; width: 30px;"></div><div class="CodeMirror-gutter-wrapper CodeMirror-activeline-gutter" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">1</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment">/**</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">2</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment"> * Node.js 中 websocket 关联外部服务器使用同一端口的方法（适用于 ws、socket-io）</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">3</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment"> */</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">4</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right:0.1px"></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">5</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment">// 第三方 WebSocket、Express，内置 Http</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">6</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">var</span> { <span class="cm-def">WebSocketServer</span> } <span class="cm-operator">=</span> <span class="cm-variable">require</span>(<span class="cm-string">'ws'</span>); </span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">7</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">var</span> { <span class="cm-def">createServer</span> } <span class="cm-operator">=</span> <span class="cm-variable">require</span>(<span class="cm-string">'http'</span>); </span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">8</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">var</span> <span class="cm-def">express</span> <span class="cm-operator">=</span> <span class="cm-variable">require</span>(<span class="cm-string">'express'</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">9</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right:0.1px"></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">10</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment">// Http 套 Express</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">11</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">var</span> <span class="cm-def">expressApp</span> <span class="cm-operator">=</span> <span class="cm-variable">express</span>();</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">12</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">var</span> <span class="cm-def">httpServer</span> <span class="cm-operator">=</span> <span class="cm-variable">createServer</span>(<span class="cm-variable">expressApp</span>);     <span class="cm-comment">// http 包裹（Decorate装饰）express 的实例 expressApp</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">13</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">var</span> <span class="cm-def">port</span> <span class="cm-operator">=</span> <span class="cm-number">3000</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">14</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right:0.1px"></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">15</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment">// expressApp.listen(port, () =&gt; { console.info("Server is running on: " + port); });</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">16</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right:0.1px"></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">17</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment">// 新建 WebSocket Server 对象，关联 Http Server</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">18</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">const</span> <span class="cm-def">webSocketServer</span> <span class="cm-operator">=</span> <span class="cm-keyword">new</span> <span class="cm-variable">WebSocketServer</span>({</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">19</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;">  <span class="cm-comment">// port: 8888,                    // 青铜操作：单独监听一个端口</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">20</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;">  <span class="cm-property">server</span>: <span class="cm-variable">httpServer</span>                <span class="cm-comment">// 白银操作：监听 http 服务器</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">21</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;">  <span class="cm-comment">// server: expressApp              // 白银操作之错误操作：websocket-ws 关联外部 http 服务器时，不支持 express 对象，需 http 对象            或被 http 包裹（Decorate装饰）的对象</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">22</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;">});</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">23</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right:0.1px"></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">24</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment">// 为 WebSocket Server 事件绑定执行函数</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">25</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable">webSocketServer</span>.<span class="cm-property">on</span>(<span class="cm-string">'connection'</span>, <span class="cm-keyword">function</span> <span class="cm-def">connection</span>(<span class="cm-def">ws</span>){</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">26</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;">  <span class="cm-variable">console</span>.<span class="cm-property">info</span>(<span class="cm-string">"A client connected in。"</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">27</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;">  <span class="cm-variable-2">ws</span>.<span class="cm-property">on</span>(<span class="cm-string">'message'</span>, <span class="cm-keyword">function</span> <span class="cm-def">message</span>(<span class="cm-def">msg</span>){</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">28</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;">    <span class="cm-variable">console</span>.<span class="cm-property">log</span>(<span class="cm-string">'received: %s'</span>, <span class="cm-variable-2">msg</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">29</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;">    <span class="cm-variable-2">ws</span>.<span class="cm-property">send</span>(<span class="cm-variable-2">msg</span>.<span class="cm-property">toString</span>());</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">30</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;">  });                   </span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">31</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right:0.1px"></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">32</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;">  <span class="cm-variable-2">ws</span>.<span class="cm-property">send</span>(<span class="cm-string">'Congratulations! You connected successfully!! (the message sended by WebSocket server)'</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">33</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right:0.1px"></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">34</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;">});</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">35</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right:0.1px"></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">36</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable">expressApp</span>.<span class="cm-property">get</span>(<span class="cm-string">'/'</span>, (<span class="cm-def">req</span>, <span class="cm-def">res</span>) <span class="cm-operator">=&gt;</span> {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">37</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;">  <span class="cm-variable-2">res</span>.<span class="cm-property">send</span>(<span class="cm-string">'Hello World!'</span>)</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">38</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;">})</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">39</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right:0.1px"></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">40</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment">// Http Server 开始监听端口</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">41</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment">// expressApp.listen(port, () =&gt; { console.info("Server is running on: " + port); });</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">42</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable">httpServer</span>.<span class="cm-property">listen</span>(<span class="cm-variable">port</span>, () <span class="cm-operator">=&gt;</span> { <span class="cm-variable">console</span>.<span class="cm-property">info</span>(<span class="cm-string">"Server is running on: "</span> <span class="cm-operator">+</span> <span class="cm-variable">port</span>); });</span></pre></div></div></div></div></div></div><div style="position: absolute; height: 13px; width: 1px; border-bottom: 0px solid transparent; top: 1016px;"></div><div class="CodeMirror-gutters" style="height: 1046px;"><div class="CodeMirror-gutter CodeMirror-linenumbers" style="width: 29px;"></div></div></div></div></wiz_code_mirror></div><div><br></div><div><br></div><div><br></div><div><br></div><div><br></div><h1>WebSocket 疑问：&nbsp;&nbsp;</h1><blockquote><div><br></div></blockquote><h2><b>Q：建立 WebSocket 连接时会先发 Http 请求吗？</b></h2><div><b>A：</b>会，会以 Http 协议发一次略像常规 Http 请求的 Http Upgrade 请求，以完成 3 次握手，建立连接，然后再以 WebSocket 协议不断线地通信。</div><blockquote></blockquote><blockquote><div>详见<b>《当前笔记：WebSocket 概念》</b></div></blockquote><div><b><br></b></div><div><b><br></b></div><h2>Q：WebSocket 能不能像 http 那样，能根据 url 中的路径来调用不同接口处理业务？</h2><blockquote></blockquote><div><b>A：</b><span data-wiz-span="data-wiz-span" style="background-color: rgb(127, 127, 127); color: rgb(255, 255, 255);">未知</span>，网上未查到相关资料。但目前我知道的是，建立 WebSocket 长连接后，只能通过 sned() 和 onmessage 发、收消息，也不能在发的消息里面调用</div><blockquote><div>接口。不过，可以借助消息或自定义事件来间接实现接口功能。例如：</div></blockquote><div>&nbsp; &nbsp; ● 借助消息：</div><div>&nbsp; &nbsp; &nbsp; &nbsp; 借助对象的一个属性来作为接口的路径，例如 type。后端在接收消息时，判断这个 type，然后做出不同的处理。<br></div><div data-mode="JavaScript" data-theme="eclipse"  id="wiz_cm_1636157265620_3814" class="wiz-code-container"><textarea style="display:none;">{
    type: "/getUserData"
    message: "获取用户信息"
}</textarea><wiz_code_mirror><div class="CodeMirror cm-s-eclipse" data-id="wiz_cm_1636157265620_3814"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 20px; left: 34px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class=" wiz-hide wiz_CodeMirror-vscrollbar" tabindex="-1" cm-not-content="true" style="width: 18px; pointer-events: none;"><div style="min-width: 1px; height: 0px;"></div></div><div class=" wiz-hide wiz_CodeMirror-hscrollbar" tabindex="-1" cm-not-content="true" style="height: 18px; pointer-events: none;"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 30px; margin-bottom: 0px; border-right-width: 30px; min-height: 104px; min-width: 206.5px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"><pre class="CodeMirror-line-like"></pre><div class="CodeMirror-linenumber CodeMirror-gutter-elt"><div>4</div></div></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class=" wiz-hide wiz_CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 4px; top: 0px; height: 24px;">&nbsp;</div></div><div class="CodeMirror-code" role="presentation"><div style="position: relative;" class="CodeMirror-activeline"><div class=" wiz-hide wiz_CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: -30px; width: 30px;"></div><div class="CodeMirror-gutter-wrapper CodeMirror-activeline-gutter" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">1</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;">{</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">2</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;">    <span class="cm-variable">type</span>: <span class="cm-string">"/getUserData"</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">3</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;">    <span class="cm-variable">message</span>: <span class="cm-string">"获取用户信息"</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">4</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;">}</span></pre></div></div></div></div></div></div><div style="position: absolute; height: 13px; width: 1px; border-bottom: 0px solid transparent; top: 104px;"></div><div class="CodeMirror-gutters" style="height: 134px;"><div class="CodeMirror-gutter CodeMirror-linenumbers" style="width: 29px;"></div></div></div></div></wiz_code_mirror></div><div><br></div><div>&nbsp; &nbsp; ● 借助自定义事件：&nbsp;<br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; 借助自定义事件名称来作为接口的路径，例如 getUserData 事件。后端在处理时，就不是接收消息，而是监听 getUserData 事件，然后做出相应处理。<br></div><div data-mode="JavaScript" data-theme="eclipse"  id="wiz_cm_1636157480426_8858" class="wiz-code-container"><textarea style="display:none;">// 伪代码 emit 表示触发事件，on 表示监听事件，具体用法还得看三方插件对应的官方文档，可能要用 addEventListener()
// 前端：
wsClient.emit("getUserData");

// 后端：
wsServer.on("getUserData", function(){});</textarea><wiz_code_mirror><div class="CodeMirror cm-s-eclipse" data-id="wiz_cm_1636157480426_8858"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 20px; left: 34px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class=" wiz-hide wiz_CodeMirror-vscrollbar" tabindex="-1" cm-not-content="true" style="width: 18px; pointer-events: none;"><div style="min-width: 1px; height: 0px;"></div></div><div class=" wiz-hide wiz_CodeMirror-hscrollbar" tabindex="-1" cm-not-content="true" style="height: 18px; pointer-events: none;"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 30px; margin-bottom: 0px; border-right-width: 30px; min-height: 152px; min-width: 805.625px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"><pre class="CodeMirror-line-like"></pre><div class="CodeMirror-linenumber CodeMirror-gutter-elt"><div>6</div></div></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class=" wiz-hide wiz_CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 4px; top: 0px; height: 24px;">&nbsp;</div></div><div class="CodeMirror-code" role="presentation" style=""><div style="position: relative;" class="CodeMirror-activeline"><div class=" wiz-hide wiz_CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: -30px; width: 30px;"></div><div class="CodeMirror-gutter-wrapper CodeMirror-activeline-gutter" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">1</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment">// 伪代码 emit 表示触发事件，on 表示监听事件，具体用法还得看三方插件对应的官方文档，可能要用 addEventListener()</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">2</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment">// 前端：</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">3</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable">wsClient</span>.<span class="cm-property">emit</span>(<span class="cm-string">"getUserData"</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">4</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right:0.1px"></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">5</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment">// 后端：</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">6</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable">wsServer</span>.<span class="cm-property">on</span>(<span class="cm-string">"getUserData"</span>, <span class="cm-keyword">function</span>(){});</span></pre></div></div></div></div></div></div><div style="position: absolute; height: 13px; width: 1px; border-bottom: 0px solid transparent; top: 152px;"></div><div class="CodeMirror-gutters" style="height: 182px;"><div class="CodeMirror-gutter CodeMirror-linenumbers" style="width: 29px;"></div></div></div></div></wiz_code_mirror></div><div><br></div><div><br></div><div><br></div><div><br></div><h2>Q：WebSocket 关联外部 Http 服务器（External HTTP/S server）的作用是什么？&nbsp; &nbsp;</h2><div><b>A：</b>据我目前所知，作用是让 WebSocket 和 Http 使用同一端口。比如即可以 <span data-wiz-span="data-wiz-span" style="background-color: rgb(127, 127, 127); color: rgb(255, 255, 255);"><b>http</b>:127.0.0.1:3000</span> 调用普通接口，又可以 <span data-wiz-span="data-wiz-span" style="background-color: rgb(127, 127, 127); color: rgb(255, 255, 255);"><b>ws</b>:127.0.0.1:3000</span> 调用&nbsp;</div><blockquote><div>WebSocket 接口建立 WebScoket 连接。&nbsp;</div></blockquote><div><br></div><div><br></div><div><br></div><h2>Q：Express、Http、WebSocket 三个 Node.js 模块（插件）什么关系？</h2><blockquote></blockquote><div><b>A：</b>express 是一个网络框架，基于 http 模块，安心用 express 写，大部分项目都能满足。</div><blockquote><div>Express是目前最流行的基于 Node.js 的 Web 开发框架，可以快速地搭建一个完整功能的网站——Web服务器。不过大家一般都用来做&nbsp;<span>Web 应用的后端，毕竟要前后端分离。</span></div><div><span>如下图所示，Express(Http) 和 WebSocket 是两个独立的模块，他们不仅可以各自独立工作，各自监听一个端口，独立提供服务，还可以协同工作，共同使用一个端口来提供服务。</span></div></blockquote><blockquote><div><div><img src="WebSocket_基础知识（index）_files/d0ee8de0-a2c2-4405-966c-ef4d617ae2d9.png" width="577" height="304"></div></div></blockquote><div><div><br></div></div><div><div><br></div></div><blockquote></blockquote><blockquote><div><div><b>Ref：</b></div></div><div><div>&nbsp; &nbsp;<span>&nbsp;</span><a href="https://zhidao.baidu.com/question/374880158644374084.html" style="text-decoration-skip-ink:none;">《baidu - nodejs里面的express 和 http 的区别在哪里？》</a></div></div><div><div>&nbsp; &nbsp;<span>&nbsp;</span><a href="https://www.jianshu.com/p/f920fd09f941" style="text-decoration-skip-ink:none;">《简书 - Node组件——Express简介》</a></div></div><div><div>&nbsp; &nbsp;<span>&nbsp;</span><a href="https://developer.mozilla.org/zh-CN/docs/learn/Server-side/Express_Nodejs/Introduction#%E4%BB%80%E4%B9%88%E6%98%AF_express" style="text-decoration-skip-ink:none;">《MDN -&nbsp; Express/Node 入门》</a></div></div></blockquote><div><div><br></div></div><div><br></div><div><br></div><div><br></div><h2>Q：<span>Http 、Express 两个模块是&nbsp;<span>Node.js 自带（内置）&nbsp;</span>吗？</span></h2><div>&nbsp; &nbsp; 内置的是 Http 模块，而非 Express 模块，Express 要自己安装。<span><br></span></div><div><br></div><div><br></div><div><br></div><h2>Q：为什么&nbsp;<span>socket.io 官方实例里，要用 Http 模块包裹 Express 模块？</span>&nbsp; &nbsp;&nbsp;</h2><blockquote><div><div><img src="WebSocket_基础知识（index）_files/ce8f2f40-13a8-4fb2-9fce-20524c879533.png" width="801" height="445"></div></div></blockquote><div><div><b>A：</b>为了让 WebSocket Sever 能成功监听（关联） Express 启动的 Http Server。虽然 Express 基于 Http，但是目前最火的几款 WebSocket 第三方插件都不</div></div><blockquote><div><div>能直接让 WebSocket Server 监听 Express 启动的 Http Server。</div></div><div><div><span>更多相关内容见</span><b>《当前笔记：Node.js 中 Websocket 关联外部 Express（Http）服务器时使用同一端口》</b>。</div></div></blockquote><div>&nbsp; &nbsp;&nbsp;<br></div><div><br></div><div><br></div><h2>Q：WebSocket 必须单独占用一个端口吗？</h2><div><b>A：</b>不，可以和 Http Server 共用一个端口。WebSocket Server 和 Http Server 如果是两个进程，那么不可监听同一端口，系统会报错端口被占用。</div><blockquote><div><br></div></blockquote><div><b>Ref：</b></div><blockquote><div><a href="https://www.bianchengquan.com/article/457876.html">《bianchengquan - html5 – websocket客户端可以从80/443以外的不同端口连接到websocket服务器》</a>说：</div></blockquote><blockquote><div><span>不是必须，但推荐共用默认的 http 80 端口。</span>&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</div></blockquote><blockquote><div>&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</div></blockquote><blockquote><div><a href="http://ladjzero.github.io/blog/2019/02/24/why-can-websocket-and-http-share-same-port/" style="text-decoration-skip-ink: none;">《<span style="color:rgb(0, 0, 0);">github - 为什么 WebSocket 和 HTTP 服务能部署到同一个端口</span>》</a>说：</div></blockquote><blockquote><div>不是必须，大部分网站会把 WebSocket 部署到和 HTTP 服务ip地址不同，但端口号一样的端口上，一般是 80 。</div></blockquote><blockquote><div>由 HTTP 服务完成握手并交出 socket 控制权，似乎可以让它们使用同一个端口。</div></blockquote><blockquote><div>强行使用同一个端口，即使用 SO_REUSEPORT（reuse port） 配置允许多个进程绑定到同一地址同一端口上。（这句话说明 WebSocket 是一个单独的应用、单独的进程。）&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</div></blockquote><blockquote><div>&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</div></blockquote><blockquote><div><a href="https://www.zhihu.com/question/264306617" style="text-decoration-skip-ink: none;">《<span style="color:rgb(0, 0, 0);">知乎 - 为什么ws和express可以监听同一个端口？</span>》</a>说：</div></blockquote><blockquote><div>跑题了，说基于 TCP/IP 协议的可以用同一端口<span>。</span></div></blockquote><blockquote><div><span><br></span></div></blockquote><blockquote><div><span><a href="https://www.google.com/search?q=websocket+%E5%8D%95%E7%8B%AC%E7%AB%AF%E5%8F%A3&amp;sxsrf=AOaemvK36OzzJtHlDGNuePOoJ8wpY2XetA:1636040356456&amp;ei=pP6DYaSfG9Xn-QbY7pPIBQ&amp;start=10&amp;sa=N&amp;ved=2ahUKEwikgaOihf_zAhXVc94KHVj3BFkQ8NMDegQIARBP&amp;biw=1920&amp;bih=938&amp;dpr=1" style="text-decoration-skip-ink: none;">Baidu - WebSocket 独立端口</a><br><a href="https://www.google.com/search?q=websocket+%E5%8D%95%E7%8B%AC%E7%AB%AF%E5%8F%A3&amp;sxsrf=AOaemvK36OzzJtHlDGNuePOoJ8wpY2XetA:1636040356456&amp;ei=pP6DYaSfG9Xn-QbY7pPIBQ&amp;start=10&amp;sa=N&amp;ved=2ahUKEwikgaOihf_zAhXVc94KHVj3BFkQ8NMDegQIARBP&amp;biw=1920&amp;bih=938&amp;dpr=1" style="text-decoration-skip-ink: none;">Google - WebSocket 单独端口</a></span></div></blockquote><blockquote><blockquote><div><span><br></span></div><div><span><br></span></div></blockquote></blockquote><blockquote><blockquote><blockquote></blockquote></blockquote></blockquote><blockquote><blockquote></blockquote></blockquote><blockquote></blockquote><div><br></div><h2><span>Q：WebSocket Server 和 Http Server&nbsp; 能监听同一个端口吗？</span></h2><div><blockquote>详情：在 Node.js 实现 WebSocket 后端案例里，在监听外部 Http 服务器时，WebSocket Server 和 Http Server&nbsp; 监听的同一个端口吗？&nbsp;</blockquote></div><div><b>A：</b>如果是两个 Server 进程，那么必须一人一个端口，如果是 <span data-wiz-span="data-wiz-span" style="background-color: rgb(127, 127, 127); color: rgb(255, 255, 255);">WebSocket-Http Server</span> 这种，是同一个进程，那么可以监听同一端口。</div><div>&nbsp; &nbsp; 至于&nbsp;<span data-wiz-span="data-wiz-span" style="background-color: rgb(127, 127, 127); color: rgb(255, 255, 255);">WebSocket-Http Server</span><span>&nbsp;</span>底层是否另起了个 WebSocket Server 进程监听另一个端口，让 Http Server 转发数据，那就不清楚了，这个暂不深究。<b><br></b></div><div><br></div><blockquote></blockquote><div><b>Ref：</b></div><blockquote><ul><li>WebSocket 协议(protocol)的一个明确设计目标是允许 WebSocket 和 HTTP 协议(protocol)共享相同的服务器端口。最初的 WebSocket 握手是一个 HTTP 兼容的升级请求。</li><li><span>只有一个服务器进程可以实际监听该端口。该服务器可能仅用于检测协议(protocol)类型，然后转发到多个其他服务器，但每个端口都由单个服务器进程拥有。</span></li><li><span>同一个端口可以处理多个不同的协议(protocol)，但一个端口只能被一个服务器进程监听。</span></li></ul></blockquote><blockquote><div><span>摘自：</span><a href="http:// https://www.coder.work/article/107375">《coder - node.js - 是否可以使用相同的端口启用 tcp、http 和 websocket？》</a></div></blockquote><blockquote><div><span>原文：</span><a href="https://stackoverflow.com/questions/13791050/is-it-possible-to-enable-tcp-http-and-websocket-all-using-the-same-port">《stackoverflow - Is it possible to enable tcp, http and websocket all using the same port?》</a></div></blockquote><div><br></div><div><br></div><div><br></div><div><br></div><div><br></div><div><blockquote><div><h2>Q：Websocket 绑定 http server 后，默认将根路径"/"设定为 WebSocket 的接口了？</h2></div></blockquote></div><blockquote></blockquote><blockquote><blockquote><div><div>详情：前端调用 WebSocket 接口时，用的和 http server 相同的 ip 和 端口。难道 websocket 绑定 http server 后，默认"/"被设定为 WebSocket 的口？</div></div></blockquote></blockquote><blockquote><div><blockquote></blockquote></div></blockquote><blockquote><div><b><br></b></div><div><b>A：</b>不是默认“/”为 WebSocket 接口，"/" 还是 http server 的一个接口，但是 WebSocket 连接接口也这个路径，只是发请求的时候协议不是 http，而是&nbsp;</div></blockquote><blockquote><blockquote><div>ws，否则<span>就调用 http server 的普通接口了。</span></div></blockquote></blockquote><div><br></div><div><br></div><div><br></div><div><br></div><div><br></div><div><h2>Q：为什么&nbsp;<span>Java 配置的 WebSocket 后台不仅不用配端口还能指定接口路径？</span></h2><blockquote><div><span>详情</span>：Java 的写的 WebSocket 后台，不用配端口，接口路径是 /chat，而 Node.js 写的 WebSocket 后台，也不需要配端口，但是接口路径似乎只能是 / ，不能指定为其他的。这是为什么呢？</div><div><br></div></blockquote><div><b>A：</b>问作者去吧，或许可以配置 WebSocket 的接口路径，不过网上见到的几个的 Node 写的 WebSocket 后台都没有配置路径，那就暂不深究吧。</div><div><br></div></div><div><br></div><div><br></div><div><br></div><h2>Q：<span>WebSocket 客户端连接失败时查找 error 信息的方法？</span></h2><div><b>A：</b>很遗憾，暂无，或许要用 Socket.IO 才好搞。</div><div><br></div><div><b>Ref：</b></div><div>&nbsp; &nbsp; <span>qastack -&nbsp;</span>Websocket onerror-如何读取错误描述？<br></div><div>&nbsp; &nbsp;&nbsp;<a href="https://qastack.cn/programming/18803971/websocket-onerror-how-to-read-error-description">https://qastack.cn/programming/18803971/websocket-onerror-how-to-read-error-description</a> </div><div>&nbsp; &nbsp; stackoverflow - Javascript doesn't catch error in WebSocket instantiation<br></div><div><span>&nbsp; &nbsp; <a href="https://stackoverflow.com/questions/31002592/javascript-doesnt-catch-error-in-websocket-instantiation/31003057#31003057">https://stackoverflow.com/questions/31002592/javascript-doesnt-catch-error-in-websocket-instantiation/31003057#31003057</a></span></div><div><span> </span><br></div><div><br></div><div><br></div><div><br></div><div><br></div><h2>Q：<span>WebSocket<span>&nbsp;</span></span>&nbsp; 服务端如何处理不同请求？如何定义不同（url）接口？</h2><div><b>A：</b>查阅大量资料发现，不能定义（url）接口，因此不能通过（url）接口处理不同请求，但可以曲线救国，方法有二：</div><div>&nbsp; &nbsp; 1、WebSocket 自定义事件</div><div>&nbsp; &nbsp; 2、WebSocket 消息中添加关键字（如符号或属性）</div><div><br></div><div>&nbsp; &nbsp; 支持&nbsp;<span data-wiz-span="data-wiz-span" style="background-color: rgb(127, 127, 127); color: rgb(255, 255, 255);">方法 1</span> 的插件：Socket.IO</div><div style="text-align: left;">&nbsp; &nbsp; <span data-wiz-span="data-wiz-span" style="color: rgb(255, 0, 0);">不</span>支持&nbsp;<span data-wiz-span="data-wiz-span" style="color: rgb(255, 255, 255); background-color: rgb(127, 127, 127);">方法 1</span><span data-wiz-span="data-wiz-span"> 的插件：WebSocket-WS、浏览器原生 WebSocket&nbsp;</span></div><div style="text-align: left;">&nbsp; &nbsp; 支持&nbsp;<span data-wiz-span="data-wiz-span" style="color: rgb(255, 255, 255); background-color: rgb(127, 127, 127);">方法 2 </span>的插件：所有</div><div style="text-align: left;">&nbsp; &nbsp; <span data-wiz-span="data-wiz-span" style="color: rgb(255, 0, 0);">不</span>支持&nbsp;<span data-wiz-span="data-wiz-span" style="color: rgb(255, 255, 255); background-color: rgb(127, 127, 127);">方法 2</span> 的插件：无</div><div>&nbsp; &nbsp;&nbsp;</div><blockquote><div>WebSocket-WS 不支持&nbsp;<span data-wiz-span="data-wiz-span" style="background-color: rgb(127, 127, 127); color: rgb(255, 255, 255);">方法 1</span> 的原因：服务端虽然有 addEventListener 方法添加自定义事件，但是客户端没有像 emit() 一样发出（触发）自定义事件的方法。</div></blockquote><div>&nbsp; &nbsp;&nbsp;</div><div><b>Ref：</b></div><div>&nbsp; &nbsp; stackoverflow - How to create custom events for 'ws' Web-Socket module?</div><div>&nbsp; &nbsp; <a href="https://stackoverflow.com/questions/41982982/how-to-create-custom-events-for-ws-web-socket-module">https://stackoverflow.com/questions/41982982/how-to-create-custom-events-for-ws-web-socket-module</a><span>&nbsp; &nbsp;&nbsp;</span></div><div>&nbsp; &nbsp; 掘金 - WebSocket,Server-Sent Events：服务器发送事件,使用长链接进行通讯</div><div>&nbsp; &nbsp; <a href="https://juejin.cn/post/6844903720744910862">https://juejin.cn/post/6844903720744910862</a> </div><div><br></div><div><br></div><div><br></div><div><br></div><div><br></div><div><br></div><div><br></div><div><br></div><div><br></div><h1 style="font-size: 1.67rem;">WebSocket<span>&nbsp;项目实例：</span></h1><div><div style=""><br></div><div style="">笔记《<a href="/views/技术总结/前端技术/为知笔记/WebSocket_项目实例合集之消息推送.html" style="text-decoration-skip-ink:none;">WebSocket_项目实例合集之消息推送</a>》</div><div style="">笔记《<a href="/views/技术总结/前端技术/为知笔记/WebSocket_项目实例合集之即时通讯.html">WebSocket_项目实例合集之即时通讯</a>》</div><div style=""><br></div><div style=""><br></div><div style=""><br></div><div style=""><br></div><div style=""><br></div><h1 style="font-size: 1.67rem;">WebSocket<span>&nbsp;项目实战：</span></h1><div style=""><br></div><div style="">笔记《<a href="/views/技术总结/前端技术/为知笔记/WebSocket_实战之即时通讯_简易聊天室.html" style="text-decoration-skip-ink:none;">WebSocket_实战之即时通讯_简易聊天室</a>》</div></div><div><br></div><div><br></div><div><br></div><div><div><br></div><h1 style="font-size:1.67rem;">WebSocket 开发问题记录：</h1><div><div><span>实际开发问题见《笔记：<a href="/views/技术总结/前端技术/为知笔记/WebSocket_开发问题记录.html" style="text-decoration-skip-ink:none;">WebSocket_开发问题记录</a>》</span></div><div><br></div></div></div>

  <script type="text/javascript">
    /**
    * 让 iframe 中的 <a> 打开新页面
    */
    let aDoms = document.getElementsByTagName("a")
    for ( let aDom of aDoms ) {
      let oldHref = aDom.href;
      let newHref = "javascript:window.open('" + oldHref + "')";
      // console.info("aDom", aDom);
      aDom.href = newHref;
    }
  </script>

</body></html>